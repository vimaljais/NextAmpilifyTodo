{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[44],{jiBT:function(t,e,r){\"use strict\";r.r(e),r.d(e,\"scopeCss\",(function(){return L}));var n=function(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;var n=Array(t),s=0;for(e=0;e<r;e++)for(var o=arguments[e],c=0,i=o.length;c<i;c++,s++)n[s]=o[c];return n},s=\"-shadowcsshost\",o=\"-shadowcssslotted\",c=\"-shadowcsscontext\",i=\")(?:\\\\(((?:\\\\([^)(]*\\\\)|[^)(]*)+?)\\\\))?([^,{]*)\",a=new RegExp(\"(-shadowcsshost\"+i,\"gim\"),u=new RegExp(\"(-shadowcsscontext\"+i,\"gim\"),l=new RegExp(\"(-shadowcssslotted\"+i,\"gim\"),f=\"-shadowcsshost-no-combinator\",h=/-shadowcsshost-no-combinator([^\\s]*)/,p=[/::shadow/g,/::content/g],g=/-shadowcsshost/gim,d=/:host/gim,v=/::slotted/gim,m=/:host-context/gim,w=/\\/\\*\\s*[\\s\\S]*?\\*\\//g,_=/\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g,x=/(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g,b=/([{}])/g,S=\"%BLOCK%\",O=function(t,e){var r=W(t),n=0;return r.escapedString.replace(x,(function(){for(var t=[],s=0;s<arguments.length;s++)t[s]=arguments[s];var o=t[2],c=\"\",i=t[4],a=\"\";i&&i.startsWith(\"{%BLOCK%\")&&(c=r.blocks[n++],i=i.substring(S.length+1),a=\"{\");var u={selector:o,content:c},l=e(u);return\"\"+t[1]+l.selector+t[3]+a+l.content+i}))},W=function(t){for(var e=t.split(b),r=[],n=[],s=0,o=[],c=0;c<e.length;c++){var i=e[c];\"}\"===i&&s--,s>0?o.push(i):(o.length>0&&(n.push(o.join(\"\")),r.push(S),o=[]),r.push(i)),\"{\"===i&&s++}return o.length>0&&(n.push(o.join(\"\")),r.push(S)),{escapedString:r.join(\"\"),blocks:n}},E=function(t,e,r){return t.replace(e,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(t[2]){for(var n=t[2].split(\",\"),s=[],o=0;o<n.length;o++){var c=n[o].trim();if(!c)break;s.push(r(f,c,t[3]))}return s.join(\",\")}return f+t[3]}))},j=function(t,e,r){return t+e.replace(s,\"\")+r},k=function(t,e,r){return e.indexOf(s)>-1?j(t,e,r):t+e+r+\", \"+e+\" \"+t+r},R=function(t,e){return!function(t){return t=t.replace(/\\[/g,\"\\\\[\").replace(/\\]/g,\"\\\\]\"),new RegExp(\"^(\"+t+\")([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\",\"m\")}(e).test(t)},T=function(t,e,r){for(var n,s=\".\"+(e=e.replace(/\\[is=([^\\]]*)\\]/g,(function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];return e[0]}))),o=function(t){var n=t.trim();if(!n)return\"\";if(t.indexOf(f)>-1)n=function(t,e,r){if(g.lastIndex=0,g.test(t)){var n=\".\"+r;return t.replace(h,(function(t,e){return e.replace(/([^:]*)(:*)(.*)/,(function(t,e,r,s){return e+n+r+s}))})).replace(g,n+\" \")}return e+\" \"+t}(t,e,r);else{var o=t.replace(g,\"\");if(o.length>0){var c=o.match(/([^:]*)(:*)(.*)/);c&&(n=c[1]+s+c[2]+c[3])}}return n},c=function(t){var e=[],r=0;return{content:(t=t.replace(/(\\[[^\\]]*\\])/g,(function(t,n){var s=\"__ph-\"+r+\"__\";return e.push(n),r++,s}))).replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g,(function(t,n,s){var o=\"__ph-\"+r+\"__\";return e.push(s),r++,n+o})),placeholders:e}}(t),i=\"\",a=0,u=/( |>|\\+|~(?!=))\\s*/g,l=!((t=c.content).indexOf(f)>-1);null!==(n=u.exec(t));){var p=n[1],d=t.slice(a,n.index).trim();i+=((l=l||d.indexOf(f)>-1)?o(d):d)+\" \"+p+\" \",a=u.lastIndex}var v,m=t.substring(a);return i+=(l=l||m.indexOf(f)>-1)?o(m):m,v=c.placeholders,i.replace(/__ph-(\\d+)__/g,(function(t,e){return v[+e]}))},B=function(t,e,r,n,s){return O(t,(function(t){var s=t.selector,o=t.content;return\"@\"!==t.selector[0]?s=function(t,e,r,n){return t.split(\",\").map((function(t){return n&&t.indexOf(\".\"+n)>-1?t.trim():R(t,e)?T(t,e,r).trim():t.trim()})).join(\", \")}(t.selector,e,r,n):(t.selector.startsWith(\"@media\")||t.selector.startsWith(\"@supports\")||t.selector.startsWith(\"@page\")||t.selector.startsWith(\"@document\"))&&(o=B(t.content,e,r,n)),{selector:s.replace(/\\s{2,}/g,\" \").trim(),content:o}}))},C=function(t,e,r,n,i){var h=function(t,e){var r=\".\"+e+\" > \",n=[];return t=t.replace(l,(function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(t[2]){for(var s=t[2].trim(),o=t[3],c=r+s+o,i=\"\",a=t[4]-1;a>=0;a--){var u=t[5][a];if(\"}\"===u||\",\"===u)break;i=u+i}var l=i+c,h=\"\"+i.trimRight()+c.trim();if(l.trim()!==h.trim()){var p=h+\", \"+l;n.push({orgSelector:l,updatedSelector:p})}return c}return f+t[3]})),{selectors:n,cssText:t}}(t=function(t){return E(t,u,k)}(t=function(t){return E(t,a,j)}(t=t.replace(m,c).replace(d,s).replace(v,o))),n);return t=function(t){return p.reduce((function(t,e){return t.replace(e,\" \")}),t)}(t=h.cssText),e&&(t=B(t,e,r,n)),{cssText:(t=(t=t.replace(/-shadowcsshost-no-combinator/g,\".\"+r)).replace(/>\\s*\\*\\s+([^{, ]+)/gm,\" $1 \")).trim(),slottedSelectors:h.selectors}},L=function(t,e,r){var s=e+\"-h\",o=e+\"-s\",c=t.match(_)||[];t=function(t){return t.replace(w,\"\")}(t);var i=[];if(r){var a=function(t){var e=\"/*!@___\"+i.length+\"___*/\",r=\"/*!@\"+t.selector+\"*/\";return i.push({placeholder:e,comment:r}),t.selector=e+t.selector,t};t=O(t,(function(t){return\"@\"!==t.selector[0]?a(t):t.selector.startsWith(\"@media\")||t.selector.startsWith(\"@supports\")||t.selector.startsWith(\"@page\")||t.selector.startsWith(\"@document\")?(t.content=O(t.content,a),t):t}))}var u=C(t,e,s,o);return t=n([u.cssText],c).join(\"\\n\"),r&&i.forEach((function(e){var r=e.placeholder,n=e.comment;t=t.replace(r,n)})),u.slottedSelectors.forEach((function(e){t=t.replace(e.orgSelector,e.updatedSelector)})),t}}}]);","map":{"version":3,"sources":["static/chunks/44.79d5eddb36d59fe6e596.js"],"names":["window","push","jiBT","module","__webpack_exports__","__webpack_require__","r","d","scopeCss","__spreadArrays","s","i","il","arguments","length","Array","k","a","j","jl","_polyfillHost","_polyfillSlotted","_polyfillHostContext","_parenSuffix","_cssColonHostRe","RegExp","_cssColonHostContextRe","_cssColonSlottedRe","_polyfillHostNoCombinator","_polyfillHostNoCombinatorRe","_shadowDOMSelectorsRe","_polyfillHostRe","_colonHostRe","_colonSlottedRe","_colonHostContextRe","_commentRe","_commentWithHashRe","_ruleRe","_curlyRe","BLOCK_PLACEHOLDER","processRules","input","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","replace","m","_i","selector","content","suffix","contentPrefix","startsWith","blocks","substring","cssRule","rule","inputParts","split","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","join","convertColonRule","cssText","regExp","partReplacer","parts","p","trim","colonHostPartReplacer","host","colonHostContextPartReplacer","indexOf","selectorNeedsScoping","scopeSelector","makeScopeMatcher","test","applyStrictSelectorScope","hostSelector","res","className","_","_scopeSelectorPart","scopedP","lastIndex","replaceBy_1","before","colon","after","applySimpleSelectorScope","t","matches","match","safeContent","placeholders","index","keep","replaceBy","pseudo","exp","safeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","scopeSelectors","scopeSelectorText","slotSelector","commentOriginalSelector","map","shallowPart","scopeCssText","scopeId","hostScopeId","slotScopeId","slotted","slotClass","selectors","compound","slottedSelector","prefixSelector","char","orgSelector","addedSelector","trimRight","updatedSelector","convertColonSlotted","convertColonHostContext","convertColonHost","reduce","result","pattern","convertShadowDOMSelectors","slottedSelectors","commentsWithHash","stripComments","orgSelectors","processCommentedSelector_1","placeholder","comment","scoped","forEach","_a"],"mappings":"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"},"name":"static/chunks/44.79d5eddb36d59fe6e596.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[44],{\n\n/***/ \"jiBT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scopeCss\", function() { return scopeCss; });\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/*\n Stencil Client Platform v1.15.0 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content,\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText,\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector\n        .split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content,\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["C:\\Users\\vimal\\node_modules\\@aws-amplify\\ui-components\\dist\\esm-es5\\shadow-css-360bb6da.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA,sBAAsB,SAAI,IAAI,SAAI;AAClC,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,6BAA6B,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,EAAE,cAAc,QAAQ,KAAK,UAAU;AACjE,oBAAoB;AACpB,mBAAmB;AACnB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,QAAQ;AAC1C;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qCAAqC,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,GAAG;AAC9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACoB","file":"x","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/*\n Stencil Client Platform v1.15.0 | MIT Licensed | https://stenciljs.com\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content,\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks,\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText,\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector\n        .split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content,\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"]}}